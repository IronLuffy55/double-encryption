{"version":3,"file":"index.esm.js","sources":["../src/index.js"],"sourcesContent":["import { randomBytes } from \"crypto\";\nimport { Encoder, Decoder } from \"stream-crypto\";\nimport { promisify } from \"util\";\nclass Manager {\n  constructor(clientKey, encryptedKey) {\n    this.clientKey = clientKey;\n    this.encryptedKey = encryptedKey;\n  }\n  async encryptText(text) {\n    const key = await this.getEncryptionKey();\n    return await Encoder.encrypt(text, key);\n  }\n  async decryptText(text) {\n    const key = await this.getEncryptionKey();\n    return await Decoder.decryptText(text, key);\n  }\n  async encryptImage(b) {\n    const key = await this.getEncryptionKey();\n    return await Encoder.encrypt(b, key);\n  }\n  async decryptImage(b) {\n    const key = await this.getEncryptionKey();\n    return await Decoder.decryptBuffer(b, key);\n  }\n  async getEncryptionKey() {\n    if (this.encryptionKey) return this.encryptionKey;\n    const { clientKey, encryptedKey } = this.properties;\n    if (!clientKey || !encryptedKey) return null;\n    const clientKeyBuffer = Buffer.from(clientKey, \"base64\");\n    const encryptedKeyBuffer = Buffer.from(encryptedKey, \"base64\");\n    const encryptionKey = await Decoder.decryptBuffer(\n      encryptedKeyBuffer,\n      clientKeyBuffer\n    );\n    return (this.encryptionKey = encryptionKey);\n  }\n  async setKey(newKey) {\n    if (typeof newKey === \"undefined\") {\n      const buf = await promisify(randomBytes)(32);\n      if (buf) newKey = buf;\n      else throw \"Could not create default key\";\n    } else if (typeof newKey == \"string\")\n      newKey = Buffer.from(newKey, \"base64\");\n    const encryptionKey = await this.getEncryptionKey();\n    if (!encryptionKey) {\n      const newEncryptionKey = await promisify(randomBytes)(32);\n      const newEncryptedKey = await Encoder.encrypt(newEncryptionKey, newKey);\n      const newEncryptionKey64 = newEncryptedKey.toString(\"base64\");\n      const newKey64 = newKey.toString(\"base64\");\n      return {\n        clientKey: newKey64,\n        encryptedKey: newEncryptionKey64\n      };\n    } else {\n      //Need to re-encrypt\n      const newEncryptedKey = await Decoder.encryptBuffer(\n        encryptionKey,\n        newKey\n      );\n      const newEncryptionKey64 = newEncryptedKey.toString(\"base64\");\n      const newKey64 = newKey.toString(\"base64\");\n      return {\n        clientKey: newKey64,\n        encryptedKey: newEncryptionKey64\n      };\n    }\n  }\n}\nexport default Manager;\n"],"names":["Manager","constructor","clientKey","encryptedKey","encryptText","text","key","getEncryptionKey","Encoder","encrypt","decryptText","Decoder","encryptImage","b","decryptImage","decryptBuffer","encryptionKey","properties","clientKeyBuffer","Buffer","from","encryptedKeyBuffer","setKey","newKey","buf","promisify","randomBytes","newEncryptionKey","newEncryptedKey","newEncryptionKey64","toString","newKey64","encryptBuffer"],"mappings":"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"}